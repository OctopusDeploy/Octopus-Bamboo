#put any key/value pairs here
my.plugin.name=Octopus Deploy
octopus.cli.key=Octopus CLI
octopus.cli.help=The Octopus Deploy Command Line executable
octopus.cli.error=This field is mandatory
octopus.verboseLogging.key=Enable debug logging
octopus.serverUrl.key=Octopus URL
octopus.serverUrl.error=This field is mandatory
octopus.serverUrl.help=Specify Octopus web portal URL (e.g. http://localhost:8065).
octopus.apiKey.key=API key
octopus.apiKey.error=This field is mandatory
octopus.apiKey.help=Specify Octopus API key. You can get this from your user page in the Octopus web portal.
octopus.spaceName.key=Space name
octopus.spaceName.help=Enter the name of the Octopus space. Leave blank for the default space.
octopus.projectName.key=Project
octopus.projectName.error=This field is mandatory
octopus.projectName.help=Enter the name of the Octopus project to create a release for.
octopus.channelName.key=Channel
octopus.channelName.help=The channel to create the release for.
octopus.pushPattern.key=Package paths
octopus.pushPattern.error=The package path is mandatory
octopus.pushPattern.help=Newline-separated paths of package files that will be pushed. Ant-style wildcards like dir/**/*.zip are supported.
octopus.force.key=Force overwrite existing packages
octopus.force.help=Normally, if a the same package already exists on the server, the server will reject the package push. This is a good practice as it ensures a package isn't accidentally overwritten. Enable this setting to override this behavior.
octopus.releaseVersion.key=Release number
octopus.releaseVersion.error=This field is mandatory
octopus.releaseVersion.help=The number to use for this release.
octopus.deployReleaseVersion.help=The number of the release to deploy, e.g., latest.
octopus.environmentName.key=Environment(s)
octopus.environmentName.error=This field is mandatory
octopus.environmentName.help=Comma separated list of environments to deploy to. Leave empty to create a release without deploying it.
octopus.environmentNameMandatory.help=Comma separated list of environments to deploy to.
octopus.ignoreExisting.key=Ignore existing releases
octopus.ignoreExisting.help=Do not create the release if the version already exists.
octopus.promoteFrom.key=Promote from
octopus.promoteFrom.error=This field is mandatory
octopus.promoteFrom.help=The environment that the release is currently deployed to, e.g., Staging.
octopus.promoteTo.key=Promote to
octopus.promoteTo.error=This field is mandatory
octopus.promoteTo.help=Comma separated list of environments to deploy to. Leave empty to create a release without deploying it.
octopus.showProgress.key=Show deployment progress
octopus.showProgress.help=If checked, the build process will only succeed if the deployment is successful. Output from the deployment will appear in the build output.
octopus.additionalArgs.key=Additional command line arguments
octopus.additionalArgs.help=Additional arguments to be passed to the Octo executable.
octopus.tenants.key=Tenant(s)
octopus.tenants.help=Comma separated list of tenants to promote for. Wildcard '*' will promote all tenants currently able to deploy to the above provided environment.
octopus.tenants.help2=Note that when supplying tenant filters then only one environment may be provided above.
octopus.tenantTags.key=Tenant tag(s)
octopus.tenantTags.help=Comma separated list of tenant tags that match tenants to deploy for.
octopus.tenantTags.help2=Note that when supplying tag filters then only one environment may be provided above.
octopus.packId.key=Package ID
octopus.packId.help=The ID of the package; e.g. MyCompany.MyApp
octopus.packId.error=This field is mandatory
octopus.packVersion.key=Version number
octopus.packVersion.help=The version number of the package. Defaults to a timestamp-based version.
octopus.packFormat.key=Package format
octopus.packFormat.help=ZIP is the recommended format.
octopus.packFormat.error=This field is mandatory
octopus.packOutFolder.key=Package output folder
octopus.packOutFolder.help=The folder into which the generated package file will be written. Defaults to the working directory.
octopus.packBasePath.key=Package base folder
octopus.packBasePath.help=The root folder containing files and folders to pack. Defaults to the working directory.
octopus.packInclude.key=Package include paths
octopus.packInclude.help=Newline-separated files to include in the package. Defaults to **
octopus.packOverwrite.key=Overwrite existing package
octopus.packOverwrite.help=Overwrite any existing package
