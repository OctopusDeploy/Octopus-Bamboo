name: Build, Test, Package and Push

# Controls when the action will run.
on:
  # Triggers the workflow on pull request events and merges/pushes to main
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'
  schedule:
    # Daily 5am australian/brisbane time
    - cron: '19 0 * * *'
    # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # all

      - name: Install Atlas SDK
        shell: bash
        run: |
          sudo sh -c 'echo "deb https://packages.atlassian.com/debian/atlassian-sdk-deb/ stable contrib" >> /etc/apt/sources.list'
          wget https://packages.atlassian.com/api/gpg/key/public
          sudo apt-key add public
          sudo apt-get update
          sudo apt-get install atlassian-plugin-sdk
          atlas-version

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.13
        with:
          versionSpec: '5.x'

      - name: Call GitVersion
        uses: gittools/actions/gitversion/execute@v0.9.13

      - name: Determine Version
        id: git-version
        run: |
          if [ "${{ github.event_name }}" == "schedule" ]
          then
            echo "::set-output name=nuGetVersion::${GITVERSION_MAJORMINORPATCH}-nightly-${{ github.run_number }}"
            echo "Version: ${GITVERSION_MAJORMINORPATCH}-nightly-${{ github.run_number }}"
          else
            echo "::set-output name=nuGetVersion::${GITVERSION_FULLSEMVER}"
            echo "Version: ${GITVERSION_FULLSEMVER}"
          fi

      - name: Build üèó
        run: |
          mvn versions:set -DnewVersion=${{ steps.git-version.outputs.nuGetVersion }}

      - name: Publish üìÅ
        run: |
          atlas-package

      - uses: actions/upload-artifact@v3
        with:
          name: package
          path: **/target/*.jar
